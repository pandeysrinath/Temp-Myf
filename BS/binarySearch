class Solution {
    private boolean isPossible(int[] bloomDay, int mid, int k, int m){
        int count = 0;
        for(int i : bloomDay){
            if(i <= mid){
                count++;
                if(count == k){
                    count = 0;
                    m--;
                    if(m == 0) return true;
                }
            }
            else count = 0;
        }
        return false;
    }
    public int minDays(int[] bloomDay, int m, int k) {
        if(m*k>bloomDay.length) return -1;
        int low = Integer.MAX_VALUE;
        int high = Integer.MIN_VALUE;
        for(int i : bloomDay){
            low = Math.min(i, low);
            high = Math.max(i, high);
        }
        while(low < high){
            int mid = (low + high) >> 1;
            if(isPossible(bloomDay, mid, k, m)){
                high = mid;
            }else{
                low = mid+1;
            }
        }
        return low;
    }
}